{
  "laws": [
    {
      "name": "Annulment Law",
      "rules": [
        "A . 0 = 0",
        "A + 1 = 1"
      ]
    },
    {
      "name": "Identity Law",
      "rules": [
        "A + 0 = A",
        "A . 1 = A"
      ]
    },
    {
      "name": "Idempotent Law",
      "rules": [
        "A + A = A",
        "A . A = A"
      ]
    },
    {
      "name": "Complement Law",
      "rules": [
        "A . ~A = 0",
        "A + ~A = 1"
      ]
    },
    {
      "name": "Distributive Law",
      "rules": [
        "A . (B + C) = A . B + A . C",
        "A + (B . C) = (A + B).(A + C)"
      ]
    },
    {
      "name": "Absorptive Law",
      "rules": [
        "A + A . B = A",
        "A . (A + B) = A"
      ]
    },
    {
      "name": "Redundancy Law",
      "rules": [
        "A . B + A . ~B = A",
        "(A + B) . (A + ~B) = A"
      ]
    },
    {
      "name": "Associative Law",
      "rules": [
        "A . (B . C) = A . B . C"
      ]
    },
    {
      "name": "Misc Laws",
      "rules": [
        "~ ~ A = A"
      ]
    },
    {
      "name": "Commutative Law",
      "rules": [
        "A + B = B + A",
        "Note that this rule is implemented in simplification of more complex expressions, but is not used for fully simplified expressions: i.e Y + X is not considered simpler than X + Y"
      ]
    }
  ]
}